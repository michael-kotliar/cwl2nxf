/*
 * Copyright 2017 Center for Genomic Regulation (CRG)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    // see https://github.com/stevesaliman/gradle-cobertura-plugin/blob/master/usage.md
    id 'net.saliman.cobertura' version '2.4.0'
}
apply plugin: 'groovy'
apply plugin: 'application'


version = '0.1'
mainClassName='io.nextflow.cwl.Cwl2nxf'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.10'
    compile 'org.yaml:snakeyaml:1.18'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.0.pr1'
    compile 'commons-cli:commons-cli:20040117.000000'

    testCompile "cglib:cglib-nodep:2.2"
    testCompile "org.objenesis:objenesis:1.4"
    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
    testCompile 'com.google.jimfs:jimfs:1.0'
    testRuntime "org.slf4j:slf4j-api:1.7.10" // needed by Cobertura plugin
}

task uberjar(type: Jar,dependsOn:[':compileJava',':compileGroovy']) {
    from files(sourceSets.main.output.classesDir)
    from configurations.runtime.asFileTree.files.collect { zipTree(it) }

    manifest {
        attributes 'Main-Class': mainClassName
    }
}


task exportClasspath {
    dependsOn configurations.runtime

    def all = configurations.runtime
    def libs = all.collect { File file -> /* println file.canonicalPath.replace(System.getProperty('user.home'), '$HOME'); */ file.canonicalPath;  }
    new File('.launch.classpath').text = libs.join(':')
}

jar.dependsOn exportClasspath


